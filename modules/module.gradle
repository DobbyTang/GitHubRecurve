apply plugin: 'calces.modules'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.apollographql.android'



android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode app_versions.code
        versionName app_versions.name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    dataBinding{
        enabled true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    sourceSets {
        main{
            java.srcDirs += 'src/main/kotlin'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

kapt{
    arguments{
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

apollo {
    schemaFilePath = "${getRootDir()}/baselib/github_base/src/main/graphql/com/tangpj/github/schema.json"
    outputPackageName = "com.tangpj.${project.getName()}"
    useJavaBeansSemanticNaming = true

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':baselib:github_base')

    implementation deps.kotlinx.serialization

    kapt deps.arouter.compiler

    kapt deps.mapstruct.processor

    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler

    kapt deps.room.compiler
    kapt deps.lifecycle.compiler

}